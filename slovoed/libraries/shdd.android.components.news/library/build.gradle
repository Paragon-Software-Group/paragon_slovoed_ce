apply from: '../package.gradle'
apply from: '../VERSION.gradle'

ext {
    if (!project.hasProperty('release')) { release = false }
    if (!project.hasProperty('buildCounter')) { buildCounter = 0 }
    if (!project.hasProperty('buildRevision')) { buildRevision = 'local' }
    if (!project.hasProperty('mavenUser')) { mavenUser = '' }
    if (!project.hasProperty('mavenPassword')) { mavenPassword = '' }

    packageVersionName = "$majorVersion.$minorVersion.$patchVersion"
    packageVersionCode = Integer.parseInt(sprintf('%03d%03d%03d%d', [ majorVersion, minorVersion, patchVersion, release ? 1 : 0 ]))

    if (!release.toBoolean()) {
        println("This is pre-release version")
        packageVersionName += "-$prereleaseSuffix-$buildCounter-$buildRevision"
    }

    println("release=$release")
    println("buildCounter=$buildCounter")
    println("buildRevision=$buildRevision")
    println("packageVersionName=$packageVersionName")
    println("packageVersionCode=$packageVersionCode")
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

configurations {
    deployerJars
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode project.packageVersionCode
        versionName project.packageVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFileName = output.outputFileName
            if (outputFileName != null && outputFileName.endsWith('.aar'))
            {
                def fileName = "${packageName}-${packageVersionName}.aar"
                output.outputFileName = fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.google.firebase:firebase-messaging:18.0.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: 'https://proget.paragon-software.com/maven2/Maven') {
            authentication(userName: mavenUser, password: mavenPassword)
            pom.project {
                groupId = "$project.packageName"
                artifactId = "$project.packageName"
                version = "$project.packageVersionName"
                description = "$project.packageDescription"
                url = "$project.packageUrl"
            }
        }
    }
}
