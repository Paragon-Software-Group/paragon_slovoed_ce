#pragma once
#include "ICompressBy.h"

/// Данный класс реализует прямое сохранение данных, без всякого сжатия. 
/** 
	Основные принципы сжатия рассмотрены в описании класса @ref ICompressBy.\n
	### Особенности данной реализации
	- Нет стадии заполнения модели.
	- Методы @ref AddData и @ref AddText напрямую копируют данные в объект вывода. Сжатие не производится.
	- Соответственно нет данных для декодирования. @ref GetCompressedTreeCount возвращает 0, а
	@ref GetCompressedTree пустой блок данных.
*/

class CCompressByStore : public CBaseCompressor
{
public:
	/// Добавляет текстовые данные перед сжатием.
	/** ********************************************************************
	* @param aDataPtr - указатель на буфер с данными
	* @param aDataSize - количество байт данных в буфере, которые необходимо 
	*					сохранить.
	* @param aDataType - тип данных которые сохраняются (номер стиля).
	*
	* @return код ошибки
	************************************************************************/
	int AddText(const UInt16 *aDataPtr, UInt32 aDataSize, UInt32 aDataType) override;
	
	/// Добавляет пустые деревья, если их реальное число меньше чем aTotalCount.
	/***********************************************************************
	* Это нужно, чтобы количество деревьев соответствовало количеству стилей,
	* чего не происходит, если некоторые стили в словаре не содержат данных
	*
	* @param aTotalCount	- общее количество деревьев, которое должно быть
	*
	* @return код ошибки
	************************************************************************/
	int AddEmptyTrees(UInt32 aTotalCount) override;

	/// Возвращает количество деревьев используемых при сжатии
	/** ********************************************************************
	* @return количество деревьев
	************************************************************************/
	UInt32 GetCompressedTreeCount() const override;

protected:
	/// Производит постройку деревьев для последующего сжатия
	int BuildTrees() override;

	/// Возвращает данные указанного дерева.
	MemoryRef GetCompressedTree(UInt32 aIndex) override;
};
